{
  "name": "gl-context",
  "version": "0.1.1",
  "main": "index.js",
  "scripts": {
    "test": "browserify test.js | indexhtmlify | hcat"
  },
  "author": {
    "name": "Hugh Kennedy",
    "email": "hughskennedy@gmail.com",
    "url": "http://hughsk.io/"
  },
  "license": "MIT",
  "devDependencies": {
    "browserify": "^4.1.2",
    "hcat": "0.0.4",
    "indexhtmlify": "^1.2.0",
    "tape": "^2.12.3"
  },
  "dependencies": {
    "raf-component": "^1.1.2"
  },
  "description": "A shorthand module for creating a new WebGL context and basic animation loop.",
  "repository": {
    "type": "git",
    "url": "git://github.com/hughsk/gl-context.git"
  },
  "keywords": [
    "gl",
    "webgl",
    "context",
    "simple",
    "browserify"
  ],
  "bugs": {
    "url": "https://github.com/hughsk/gl-context/issues"
  },
  "homepage": "https://github.com/hughsk/gl-context",
  "readme": "# gl-context [![stable](http://badges.github.io/stability-badges/dist/stable.svg)](http://github.com/badges/stability-badges)\n\nA shorthand module for creating a new WebGL context and basic animation loop.\n\nNormally I'd recommend [gl-now](http://github.com/gl-modules/gl-now), but this\nis for those cases when you want more flexibility.\n\n## Usage\n\n[![gl-context](https://nodei.co/npm/gl-context.png)](https://nodei.co/npm-dl/gl-context)\n\n### gl = createContext(canvas, [opts], [render])\n\nCreates and returns a new WebGL context attached to `canvas`. Optionally, you\ncan pass in a `render` function and this will be called once each frame using\n`requestAnimationFrame`.\n\nOptionally, you can pass `opts` to the `getContext` method, e.g.\n\n``` javascript\nvar canvas = document.createElement('canvas')\n\nvar gl = createContext(canvas, {\n  premultipliedAlpha: false\n}, function render() {\n  // render loop...\n})\n```\n\n## License\n\nMIT. See [LICENSE.md](http://github.com/hughsk/gl-context/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "gl-context@0.1.1",
  "_from": "gl-context@^0.1.1"
}
